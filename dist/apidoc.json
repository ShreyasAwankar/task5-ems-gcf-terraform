
{
  "openapi": "3.0.0",
  "info": {
    "title": "Employee Management System API",
    "description": "REST API for managing employee records by Shreyas Awankar.\n\n  Employee Management API (v1) is a RESTful service that allows you to manage employee data. This API provides a set of endpoints to create, retrieve, update, and delete employee records. It is designed to streamline the processes of managing employee information in an organization.",
    "version": "1.0.0",
    "contact": {
      "email": "shreyasawankar01@gmail.com"
    }
  },
  "servers": [
    {
      "url": "https://us-central1-terraform-cloud-functions-ems.cloudfunctions.net"
    }
  ],
  "tags": [
    {
      "name": "Employees",
      "description": "Operations related to managing employee records."
    }
  ],
  "paths": {
    "/getAllEmployees": {
      "get": {
        "tags": ["Employees"],
        "summary": "Retrieve all employees",
        "operationId": "GetAllEmployees",
        "responses": {
          "200": {
            "description": "List of employees",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Employee"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/createEmployee": {
      "post": {
        "tags": ["Employees"],
        "summary": "Create a new employee",
        "operationId": "createEmployee",
        "requestBody": {
          "description": "Create new employee",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Employee"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Employee created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            }
          },
          "400": {
            "description": "Invalid JSON"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        }
      }
    },
    "/searchEmployees": {
      "get": {
        "tags": ["Employees"],
        "summary": "Search employees",
        "description": "Search for employees based on first name, last name, email, role. (Case sensitive)",
        "operationId": "SearchEmployees",
        "parameters": [
          {
            "in": "query",
            "name": "firstName",
            "schema": {
              "type": "string"
            },
            "description": "First name of the employee"
          },
          {
            "in": "query",
            "name": "lastName",
            "schema": {
              "type": "string"
            },
            "description": "Last name of the employee"
          },
          {
            "in": "query",
            "name": "email",
            "schema": {
              "type": "string"
            },
            "description": "Email address of the employee"
          },
          {
            "in": "query",
            "name": "role",
            "schema": {
              "type": "string"
            },
            "description": "Role of the employee"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Employee"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Employee not found"
          }
        }
      }
    },
    "/getEmployeeById": {
      "get": {
        "summary": "Retrieve an employee by ID",
        "operationId": "GetEmployee",
        "parameters": [
          {
            "in": "query",
            "name": "empid",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Employee ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Employee"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Employee not found"
          }
        },
        "tags": ["Employees"]
      }
    },
    "/updateEmployee": {
      "put": {
        "summary": "Update an employee by ID",
        "operationId": "UpdateEmployee",
        "parameters": [
          {
            "in": "query",
            "name": "empid",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Employee ID"
          }
        ],
        "requestBody": {
          "description": "Updated employee data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Employee"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Employee updated"
          },
          "404": {
            "description": "Employee not found"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        },
        "tags": ["Employees"]
      }
    },
    "/deleteEmployee": {
      "delete": {
        "summary": "Delete an employee by ID",
        "operationId": "DeleteEmployee",
        "parameters": [
          {
            "in": "query",
            "name": "empid",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Employee ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Employee deleted"
          },
          "404": {
            "description": "Employee not found"
          }
        },
        "tags": ["Employees"]
      }
    }
  },
  "components": {
    "schemas": {
      "Employee": {
        "type": "object",
        "properties": {
          "employee_id": {
            "type": "integer"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone_no": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "salary": {
            "type": "number"
          },
          "birthdate": {
            "type": "string"
          }
        },
        "required": [
          "employee_id",
          "first_name",
          "last_name",
          "email",
          "role",
          "salary",
          "birthdate"
        ],
        "example": {
          "first_name": "John",
          "last_name": "Doe",
          "email": "john.doe@example.com",
          "password": "secret123",
          "phone_no": "+91-7745679834",
          "role": "admin",
          "salary": 50000,
          "birthdate": "1990-01-01"
        }
      }
    }
  }
}
